/*
 * NRF OAuth2
 *
 * NRF OAuth2 Authorization
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package accesstoken

import (
	"github.com/nycu-ucr/gonet/http"

	"github.com/nycu-ucr/gin"

	"github.com/nycu-ucr/http_wrapper"
	"github.com/nycu-ucr/nrf/logger"
	"github.com/nycu-ucr/nrf/producer"
	"github.com/nycu-ucr/openapi"
	"github.com/nycu-ucr/openapi/models"
)

// AccessTokenRequest - Access Token Request
func HTTPAccessTokenRequest(c *gin.Context) {
	logger.AccessTokenLog.Infoln("In HTTPAccessTokenRequest")
	var accessTokenReq models.AccessTokenReq

	// logger.AccessTokenLog.Infoln("Content Type: ", c.ContentType())
	err := c.Bind(&accessTokenReq)
	if err != nil {
		problemDetail := "[Request Body] " + err.Error()
		rsp := models.ProblemDetails{
			Title:  "Malformed request syntax",
			Status: http.StatusBadRequest,
			Detail: problemDetail,
		}
		logger.AccessTokenLog.Warnln(problemDetail)
		c.JSON(http.StatusBadRequest, rsp)
		return
	}

	req := http_wrapper.NewRequest(c.Request, accessTokenReq)
	req.Params["paramName"] = c.Params.ByName("paramName")

	httpResponse := producer.HandleAccessTokenRequest(req)

	responseBody, err := openapi.Serialize(httpResponse.Body, "application/json")

	if err != nil {
		logger.AccessTokenLog.Warnln(err)
		problemDetails := models.ProblemDetails{
			Status: http.StatusInternalServerError,
			Cause:  "SYSTEM_FAILURE",
			Detail: err.Error(),
		}
		c.JSON(http.StatusInternalServerError, problemDetails)
	} else {
		c.JSON(httpResponse.Status, responseBody)
	}
}
