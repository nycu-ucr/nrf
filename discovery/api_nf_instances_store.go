/*
 * NRF NFDiscovery Service
 *
 * NRF NFDiscovery  Service
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package discovery

import (
	"github.com/nycu-ucr/gonet/http"

	"github.com/nycu-ucr/gin"

	"github.com/nycu-ucr/http_wrapper"
	"github.com/nycu-ucr/nrf/logger"
	"github.com/nycu-ucr/nrf/producer"
	"github.com/nycu-ucr/openapi"
	"github.com/nycu-ucr/openapi/models"
)

// SearchNFInstances - Search a collection of NF Instances
func HTTPSearchNFInstances(c *gin.Context) {
	// var searchNFInstance context.SearchNFInstances
	// c.BindQuery(&searchNFInstance)
	// logger.DiscoveryLog.Infoln("searchNFInstance: ", searchNFInstance)
	// logger.DiscoveryLog.Infoln("targetNFType: ", searchNFInstance.TargetNFType)
	// logger.DiscoveryLog.Infoln("requesterNFType: ", searchNFInstance.RequesterNFType)
	// logger.DiscoveryLog.Infoln("ChfSupportedPlmn: ", searchNFInstance.ChfSupportedPlmn)

	req := http_wrapper.NewRequest(c.Request, nil)
	req.Query = c.Request.URL.Query()
	httpResponse := producer.HandleNFDiscoveryRequest(req)

	responseBody, err := openapi.Serialize(httpResponse.Body, "application/json")
	if err != nil {
		logger.DiscoveryLog.Warnln(err)
		problemDetails := models.ProblemDetails{
			Status: http.StatusInternalServerError,
			Cause:  "SYSTEM_FAILURE",
			Detail: err.Error(),
		}
		c.JSON(http.StatusInternalServerError, problemDetails)
	} else {
		c.Data(httpResponse.Status, "application/json", responseBody)
	}
}
